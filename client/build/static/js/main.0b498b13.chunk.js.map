{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/record-playerz.jpeg","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","components/CommentList/index.js","components/ThoughtList/index.js","components/ThoughtForm/index.js","pages/Forum.js","components/CommentForm/index.js","pages/SingleThought.js","App.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","products","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","thought","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","image","price","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","QUERY_THOUGHTS","QUERY_SINGLE_THOUGHT","ProductList","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","require","config","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","ADD_THOUGHT","REMOVE_THOUGHT","ADD_COMMENT","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","record","width","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","thoughts","setUser","update","cache","addThought","readQuery","query","writeQuery","removeThought","order","purchaseDate","toLocaleDateString","index","thoughtAuthor","thoughtText","CommentList","comments","comment","commentAuthor","commentText","fontSize","createdAt","ThoughtList","title","showTitle","showfirstName","ThoughtForm","setThoughtText","characterCount","setCharacterCount","getProfile","lineHeight","resize","message","Forum","CommentForm","thoughtId","setCommentText","addComment","SingleThought","url","pathname","substring","lastIndexOf","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","useLocalStorage","theme","setTheme","ApolloProvider","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b498b13.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n      db.createObjectStore('thought', { keyPath: '_id'});\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n\nexport const QUERY_SINGLE_THOUGHT = \"QUERY_SINGLE_THOUGHT\";\n\nexport const REMOVE_THOUGHT = \"REMOVE_THOUGHT\";","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n  REMOVE_THOUGHT,\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      console.log(action.products);\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case REMOVE_THOUGHT: \n        return {\n          ...state,\n          thought: action.thought\n        }\n      \n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div className=\"productStock\">{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span className=\"productStock\">${price}</span>\n      </div>\n      <button className=\"btnAdd\" onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n {\n    user {\n      _id\n      firstName\n      lastName\n      thoughts {\n        _id\n        thoughtText\n        createdAt\n      }\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_THOUGHTS = gql`\n  query getThoughts {\n    thoughts {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        commentAuthor\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_THOUGHT = gql`\n  query getSingleThought($_id: ID!) {\n    thought(_id: $_id) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        commentAuthor\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      firstName\n      email\n      thoughts {\n        _id\n        thoughtText\n        thoughtAuthor\n        createdAt\n      }\n    }\n  }\n`;","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"container my-2\">\n      <h5>Our Products:</h5>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div className=''>\n      <h4>Choose a Category:</h4>\n      {categories.map((item) => (\n        <button className='catBtn'\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div className='cartName'>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nrequire(\"dotenv\").config();\n\n// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\nconst stripePromise = loadStripe('pk_test_L1f0e3XAzjsG7jtp4uN7L9ql');\n\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  // We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\n  // Then we should redirect to the checkout with a reference to our session id\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  // If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\n  // If so, invoke the getCart method and populate the cart with the existing from the session\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  // When the submit checkout method is invoked, loop through each item in the cart\n  // Add each item id to the productIds array and then invoke the getCheckout query passing an object containing the id for all our products\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          Cart is empty\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        firstName\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_THOUGHT = gql`\n  mutation addThought($thoughtText: String!) {\n    addThought(thoughtText: $thoughtText) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n      }\n    }\n  }\n`;\n\nexport const REMOVE_THOUGHT = gql`\n  mutation removeThought($thoughtId: ID!) {\n    removeThought(thoughtId: $thoughtId) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n      }\n    }\n  }\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($thoughtId: ID!, $commentText: String!) {\n    addComment(thoughtId: $thoughtId, commentText: $commentText) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        createdAt\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"loginContainer container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"loginContainer container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","export default __webpack_public_path__ + \"static/media/record-playerz.389497a6.jpeg\";","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport record from \"./record-playerz.jpeg\";\n\nfunction Nav() {\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n        <img src={record} alt=\"Avatar\" width={100} className=\"avatar\" />\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"nav\">\n          <li className=\"mx-1\">\n            <Link to=\"/forum\">\n              Forum\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"nav\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  \n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React, {useEffect, useState} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\nimport { useMutation } from '@apollo/client';\nimport { REMOVE_THOUGHT } from '../utils/mutations';\nimport { QUERY_THOUGHTS } from '../utils/queries';\n\nfunction OrderHistory() {\n  console.log('req');\n  const { data, loading  } = useQuery(QUERY_USER);\n\n  console.log({data})\n  const [user, setUser] = useState({user:{}, orders:[], thoughts:[]});\n\n  useEffect(() => {\n    console.log('eff')\n    console.log({loading, data})\n    if (data) {\n    console.log({data});\n      setUser(data.user);\n      // user = data.user;\n      // console.log(user);\n    }\n  }, [data, loading]);\n\n  const [removeThought, { error }] = useMutation(REMOVE_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [removeThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      // const { me } = cache.readQuery({ query: QUERY_ME });\n      // cache.writeQuery({\n      //   query: QUERY_ME,\n      //   data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      // });\n    },\n  });\n\n  return (\n    <>\n      <div className=\"container px-2\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {loading ? 'Loading...' : (data &&\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.length && order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n            <h2>\n              Post History for {user.firstName}\n            </h2>\n            {user.thoughts.map((thought) => (\n              <div key={thought._id} className=\"postTexr\">\n              <h4 className=\"card-header bg-primary text-light p-2 m-0\">\n                  <Link\n                    className=\"text-light\"\n                    to={`/thoughts/${thought._id}`}\n                  >\n                    {thought.thoughtAuthor} <br />\n                  </Link>\n              </h4>\n              <div className=\"card-body bg-light p-2\">\n                <p>{thought.thoughtText}</p>\n                <a href=\"/\" >Remove</a>\n              </div>\n              \n              \n              <Link\n                className=\"btn btn-primary btn-block btn-squared\"\n                to={`/thoughts/${thought._id}`}\n              >\n                Join the discussion.\n              </Link>\n            </div>\n            ))}\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;","import React from 'react';\n\nconst CommentList = ({ comments = [] }) => {\n  \n\n  return (\n    <>\n      <div className=\"\">\n        {comments &&\n          comments.map((comment) => (\n            <div key={comment._id} className=\"\">\n              <div className='commentAuthor'>\n              <p>{comment.commentAuthor}</p>\n              </div>\n              <div className=\"commentList\">\n                <p>{comment.commentText}</p>\n                <div>\n                <span style={{ fontSize: '0.6rem' }}>\n                    {comment.createdAt}\n                </span>\n              </div>\n                \n              </div>\n            </div>\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default CommentList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CommentList from '../CommentList';\n\nconst ThoughtList = ({\n  thoughts,\n  title,\n  showTitle = true,\n  showfirstName = true,\n}) => {\n  if (!thoughts.length) {\n    return <h3>No Thoughts Yet</h3>;\n  }\n\n  return (\n    <div>\n\n      {thoughts &&\n        thoughts.map((thought) => (\n        <div key={thought._id} className=\"post\">\n          <div>\n            <div className='thoughtAuthor'>\n              <p>{thought.thoughtAuthor}</p>\n            </div>\n\n            <div className=\"postText\">\n              <p>{thought.thoughtText}</p>            \n              <div>\n                <span style={{ fontSize: '0.6rem' }}>\n                    {thought.createdAt}\n                </span>\n              </div>\n            </div>\n            <div>\n              <CommentList comments={thought.comments} />\n            </div>\n          </div>\n            \n            <Link\n              className=\"btn btn-primary btn-block btn-squared discussion\"\n              to={`/thoughts/${thought._id}`}\n            >\n              <p className='discussion'>Join the discussion.</p>\n            </Link>\n        </div>\n        ))}\n    </div>\n  );\n};\n\nexport default ThoughtList;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      // const { me } = cache.readQuery({ query: QUERY_ME });\n      // cache.writeQuery({\n      //   query: QUERY_ME,\n      //   data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      // });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.firstName,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\n\nimport ThoughtList from '../components/ThoughtList';\nimport ThoughtForm from '../components/ThoughtForm';\n\nimport { QUERY_THOUGHTS } from '../utils/queries';\n\nconst Forum = () => {\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\n  const thoughts = data?.thoughts || [];\n\n  return (\n    <div className=\"container px-2\">\n      <Link to=\"/\"> Home</Link>\n        <div>\n          <ThoughtForm />\n        </div>\n        <div className=\"\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <ThoughtList\n              thoughts={thoughts}\n              title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div>\n      </div>\n\n  );\n};\n\n\n\nexport default Forum;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.firstName,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","import React from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport CommentList from '../components/CommentList';\nimport CommentForm from '../components/CommentForm';\n\nimport { QUERY_SINGLE_THOUGHT } from '../utils/queries';\n\nconst SingleThought = () => {\n  \n  const url = window.location.pathname;\n  const id = url.substring(url.lastIndexOf('/') + 1);\n\n  const { loading, data } = useQuery(QUERY_SINGLE_THOUGHT, {\n    // pass URL parameter\n    variables: { _id: id },\n  });\n\n  const thought = data?.thought || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div >\n      <div>\n      <h3 className=\"\">\n        {thought.thoughtAuthor} <br />\n        <span style={{ fontSize: '1rem' }}>\n        {thought.createdAt}\n        </span>\n      </h3>\n      <div>\n        <blockquote>\n          {thought.thoughtText}\n        </blockquote>\n      </div>\n      </div>\n\n      <div className=\"\">\n        <CommentList comments={thought.comments} />\n      </div>\n      <div>\n        <CommentForm thoughtId={thought._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleThought;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport Forum from './pages/Forum';\nimport SingleThought from './pages/SingleThought';\n\nimport useLocalStorage from 'use-local-storage'\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [theme, setTheme] = useLocalStorage('theme' ? 'dark' : 'light')\n\n  const switchTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme)}\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div  className=\"app\" data-theme={theme}>\n          <div>\n            <label className=\"switch\" onClick={switchTheme}> {theme === \"light\" ? \"☽\" : \"☼\"}</label>\n          </div>\n          <StoreProvider>\n            <Nav>\n              </Nav>\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/forum\" \n                element={<Forum />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"/thoughts/:thoughtId\"\n                element={<SingleThought />}\n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}