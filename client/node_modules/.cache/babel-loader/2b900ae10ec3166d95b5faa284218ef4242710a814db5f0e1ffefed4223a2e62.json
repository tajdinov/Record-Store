{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tazh/Desktop/Study/Record-Store/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"/Users/tazh/Desktop/Study/Record-Store/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/tazh/Desktop/Study/Record-Store/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/tazh/Desktop/Study/Record-Store/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect}from'react';import{loadStripe}from'@stripe/stripe-js';import{useLazyQuery}from'@apollo/client';import{QUERY_CHECKOUT}from'../../utils/queries';import{idbPromise}from'../../utils/helpers';import CartItem from'../CartItem';import Auth from'../../utils/auth';import{useStoreContext}from'../../utils/GlobalState';import{TOGGLE_CART,ADD_MULTIPLE_TO_CART}from'../../utils/actions';import'./style.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";require(\"dotenv\").config();// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\nvar stripePromise=loadStripe('pk_test_L1f0e3XAzjsG7jtp4uN7L9ql');var Cart=function Cart(){var _useStoreContext=useStoreContext(),_useStoreContext2=_slicedToArray(_useStoreContext,2),state=_useStoreContext2[0],dispatch=_useStoreContext2[1];var _useLazyQuery=useLazyQuery(QUERY_CHECKOUT),_useLazyQuery2=_slicedToArray(_useLazyQuery,2),getCheckout=_useLazyQuery2[0],data=_useLazyQuery2[1].data;// We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\n// Then we should redirect to the checkout with a reference to our session id\nuseEffect(function(){if(data){stripePromise.then(function(res){res.redirectToCheckout({sessionId:data.checkout.session});});}},[data]);// If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\n// If so, invoke the getCart method and populate the cart with the existing from the session\nuseEffect(function(){function getCart(){return _getCart.apply(this,arguments);}function _getCart(){_getCart=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var cart;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return idbPromise('cart','get');case 2:cart=_context.sent;dispatch({type:ADD_MULTIPLE_TO_CART,products:_toConsumableArray(cart)});case 4:case\"end\":return _context.stop();}}},_callee);}));return _getCart.apply(this,arguments);}if(!state.cart.length){getCart();}},[state.cart.length,dispatch]);function toggleCart(){dispatch({type:TOGGLE_CART});}function calculateTotal(){var sum=0;state.cart.forEach(function(item){sum+=item.price*item.purchaseQuantity;});return sum.toFixed(2);}// When the submit checkout method is invoked, loop through each item in the cart\n// Add each item id to the productIds array and then invoke the getCheckout query passing an object containing the id for all our products\nfunction submitCheckout(){var productIds=[];state.cart.forEach(function(item){for(var i=0;i<item.purchaseQuantity;i++){productIds.push(item._id);}});getCheckout({variables:{products:productIds}});}if(!state.cartOpen){return/*#__PURE__*/_jsx(\"div\",{className:\"cart-closed\",onClick:toggleCart,children:/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"trash\",children:\"\\uD83D\\uDED2\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"cart\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"close\",onClick:toggleCart,children:\"[close]\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Shopping Cart\"}),state.cart.length?/*#__PURE__*/_jsxs(\"div\",{children:[state.cart.map(function(item){return/*#__PURE__*/_jsx(CartItem,{item:item},item._id);}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-row space-between\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Total: $\",calculateTotal()]}),Auth.loggedIn()?/*#__PURE__*/_jsx(\"button\",{onClick:submitCheckout,children:\"Checkout\"}):/*#__PURE__*/_jsx(\"span\",{children:\"(log in to check out)\"})]})]}):/*#__PURE__*/_jsx(\"h3\",{children:\"Cart is empty\"})]});};export default Cart;","map":{"version":3,"names":["React","useEffect","loadStripe","useLazyQuery","QUERY_CHECKOUT","idbPromise","CartItem","Auth","useStoreContext","TOGGLE_CART","ADD_MULTIPLE_TO_CART","require","config","stripePromise","Cart","state","dispatch","getCheckout","data","then","res","redirectToCheckout","sessionId","checkout","session","getCart","cart","type","products","length","toggleCart","calculateTotal","sum","forEach","item","price","purchaseQuantity","toFixed","submitCheckout","productIds","i","push","_id","variables","cartOpen","map","loggedIn"],"sources":["/Users/tazh/Desktop/Study/Record-Store/client/src/components/Cart/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nrequire(\"dotenv\").config();\n\n// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\nconst stripePromise = loadStripe('pk_test_L1f0e3XAzjsG7jtp4uN7L9ql');\n\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  // We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\n  // Then we should redirect to the checkout with a reference to our session id\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  // If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\n  // If so, invoke the getCart method and populate the cart with the existing from the session\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  // When the submit checkout method is invoked, loop through each item in the cart\n  // Add each item id to the productIds array and then invoke the getCheckout query passing an object containing the id for all our products\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          ðŸ›’\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          Cart is empty\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}