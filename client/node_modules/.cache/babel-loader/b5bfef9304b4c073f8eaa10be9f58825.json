{"ast":null,"code":"var _jsxFileName = \"/Users/tazh/Desktop/Study/Record-Store/client/src/pages/SingleThought.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport CommentList from '../components/CommentList';\nimport CommentForm from '../components/CommentForm';\nimport { QUERY_SINGLE_THOUGHT } from '../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleThought = () => {\n  _s();\n  const url = window.location.pathname;\n  const id = url.substring(url.lastIndexOf('/') + 1);\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_SINGLE_THOUGHT, {\n    // pass URL parameter\n    variables: {\n      _id: id\n    }\n  });\n  const thought = (data === null || data === void 0 ? void 0 : data.thought) || {};\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"\",\n      children: [thought.thoughtAuthor, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '1rem'\n        },\n        children: thought.createdAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n        children: thought.thoughtText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-5\",\n      children: /*#__PURE__*/_jsxDEV(CommentList, {\n        comments: thought.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CommentForm, {\n        thoughtId: thought._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleThought, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\n_c = SingleThought;\nexport default SingleThought;\nvar _c;\n$RefreshReg$(_c, \"SingleThought\");","map":{"version":3,"names":["React","useParams","useQuery","CommentList","CommentForm","QUERY_SINGLE_THOUGHT","SingleThought","url","window","location","pathname","id","substring","lastIndexOf","loading","data","variables","_id","thought","thoughtAuthor","fontSize","createdAt","thoughtText","comments"],"sources":["/Users/tazh/Desktop/Study/Record-Store/client/src/pages/SingleThought.js"],"sourcesContent":["import React from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport CommentList from '../components/CommentList';\nimport CommentForm from '../components/CommentForm';\n\nimport { QUERY_SINGLE_THOUGHT } from '../utils/queries';\n\nconst SingleThought = () => {\n  \n  const url = window.location.pathname;\n  const id = url.substring(url.lastIndexOf('/') + 1);\n\n  const { loading, data } = useQuery(QUERY_SINGLE_THOUGHT, {\n    // pass URL parameter\n    variables: { _id: id },\n  });\n\n  const thought = data?.thought || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className=\"\">\n      <h3 className=\"\">\n        {thought.thoughtAuthor} <br />\n        <span style={{ fontSize: '1rem' }}>\n        {thought.createdAt}\n        </span>\n      </h3>\n      <div>\n        <blockquote>\n          {thought.thoughtText}\n        </blockquote>\n      </div>\n\n      <div className=\"my-5\">\n        <CommentList comments={thought.comments} />\n      </div>\n      <div>\n        <CommentForm thoughtId={thought._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleThought;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,SAASC,oBAAoB,QAAQ,kBAAkB;AAAC;AAExD,MAAMC,aAAa,GAAG,MAAM;EAAA;EAE1B,MAAMC,GAAG,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;EACpC,MAAMC,EAAE,GAAGJ,GAAG,CAACK,SAAS,CAACL,GAAG,CAACM,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAElD,MAAM;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGb,QAAQ,CAACG,oBAAoB,EAAE;IACvD;IACAW,SAAS,EAAE;MAAEC,GAAG,EAAEN;IAAG;EACvB,CAAC,CAAC;EAEF,MAAMO,OAAO,GAAG,CAAAH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,OAAO,KAAI,CAAC,CAAC;EAEnC,IAAIJ,OAAO,EAAE;IACX,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB;EAC9B;EACA,oBACE;IAAK,SAAS,EAAC,EAAE;IAAA,wBACf;MAAI,SAAS,EAAC,EAAE;MAAA,WACbI,OAAO,CAACC,aAAa,oBAAE;QAAA;QAAA;QAAA;MAAA,QAAM,eAC9B;QAAM,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAO,CAAE;QAAA,UACjCF,OAAO,CAACG;MAAS;QAAA;QAAA;QAAA;MAAA,QACX;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACL;MAAA,uBACE;QAAA,UACGH,OAAO,CAACI;MAAW;QAAA;QAAA;QAAA;MAAA;IACT;MAAA;MAAA;MAAA;IAAA,QACT,eAEN;MAAK,SAAS,EAAC,MAAM;MAAA,uBACnB,QAAC,WAAW;QAAC,QAAQ,EAAEJ,OAAO,CAACK;MAAS;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACvC,eACN;MAAA,uBACE,QAAC,WAAW;QAAC,SAAS,EAAEL,OAAO,CAACD;MAAI;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACnC;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GArCIX,aAAa;EAAA,QAKSJ,QAAQ;AAAA;AAAA,KAL9BI,aAAa;AAuCnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}