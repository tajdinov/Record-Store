{"ast":null,"code":"var _jsxFileName = \"/Users/tazh/Desktop/Study/Record-Store/client/src/components/ThoughtForm/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\nimport Auth from '../../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ThoughtForm = () => {\n  _s();\n  const [thoughtText, setThoughtText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addThought, {\n    error\n  }] = useMutation(ADD_THOUGHT, {\n    update(cache, _ref) {\n      let {\n        data: {\n          addThought\n        }\n      } = _ref;\n      try {\n        const {\n          thoughts\n        } = cache.readQuery({\n          query: QUERY_THOUGHTS\n        });\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: {\n            thoughts: [addThought, ...thoughts]\n          }\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      // const { me } = cache.readQuery({ query: QUERY_ME });\n      // cache.writeQuery({\n      //   query: QUERY_ME,\n      //   data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      // });\n    }\n  });\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const {\n        data\n      } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.firstName\n        }\n      });\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"What's on your mind?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), Auth.loggedIn() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: `m-0 ${characterCount === 280 || error ? 'text-danger' : ''}`,\n        children: [\"Character Count: \", characterCount, \"/280\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"flex-row justify-center justify-space-between-md align-center\",\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-9\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"thoughtText\",\n            placeholder: \"Here's a new thought...\",\n            value: thoughtText,\n            className: \"form-input w-100\",\n            style: {\n              lineHeight: '1.5',\n              resize: 'vertical'\n            },\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-block py-3\",\n            type: \"submit\",\n            children: \"Add Thought\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 my-3 bg-danger text-white p-3\",\n          children: error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You need to be logged in to share your thoughts. Please\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"signup.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ThoughtForm, \"nN2C3fNjFqAhHBqFH6MKYWXIL+o=\", false, function () {\n  return [useMutation];\n});\n_c = ThoughtForm;\nexport default ThoughtForm;\nvar _c;\n$RefreshReg$(_c, \"ThoughtForm\");","map":{"version":3,"names":["React","useState","Link","useMutation","ADD_THOUGHT","QUERY_THOUGHTS","QUERY_ME","Auth","ThoughtForm","thoughtText","setThoughtText","characterCount","setCharacterCount","addThought","error","update","cache","data","thoughts","readQuery","query","writeQuery","e","console","handleFormSubmit","event","preventDefault","variables","thoughtAuthor","getProfile","firstName","err","handleChange","name","value","target","length","loggedIn","lineHeight","resize","message"],"sources":["/Users/tazh/Desktop/Study/Record-Store/client/src/components/ThoughtForm/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      // const { me } = cache.readQuery({ query: QUERY_ME });\n      // cache.writeQuery({\n      //   query: QUERY_ME,\n      //   data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      // });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.firstName,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}